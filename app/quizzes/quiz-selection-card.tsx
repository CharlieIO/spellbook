/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/SAahTHFXLiJ
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/
'use client'
import { useState, useEffect } from 'react';
import { CardTitle, CardDescription, CardHeader, CardContent, Card } from "@/components/ui/card";
import { Label } from "@/components/ui/label";
import { SelectValue, SelectTrigger, SelectItem, SelectContent, Select } from "@/components/ui/select";
import { Button } from "@/components/ui/button";

type ClassItem = {
  uuid: string;
  name: string;
  created_at: string;
};

export function QuizSelectionCard() {
  const [classes, setClasses] = useState<ClassItem[]>([]);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    async function fetchClasses() {
      setIsLoading(true);
      try {
        const response = await fetch('/api/classes');
        if (!response.ok) {
          throw new Error('Failed to fetch classes');
        }
        const jsonResponse = await response.json();
        if (jsonResponse.data && Array.isArray(jsonResponse.data)) {
          const sortedClasses = jsonResponse.data
            .map((item: { uuid: string; name: string; created_at: string }) => ({
              uuid: item.uuid,
              name: item.name,
              created_at: item.created_at
            }))
            .sort((a: ClassItem, b: ClassItem) => new Date(a.created_at).getTime() - new Date(b.created_at).getTime());
          setClasses(sortedClasses);
        } else {
          throw new Error('Invalid data structure');
        }
      } catch (error) {
        console.error('Error fetching classes:', error);
        setClasses([]);
      } finally {
        setIsLoading(false);
      }
    }

    fetchClasses();
  }, []);

  return (
    <Card className="w-full max-w-md">
      <CardHeader>
        <CardTitle>Generate Quiz</CardTitle>
        <CardDescription>Select a class to generate a quiz.</CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="space-y-2">
          <Label htmlFor="class">Class</Label>
          <Select>
            <SelectTrigger id="class" aria-label="Class">
              <SelectValue placeholder="Select a class" />
            </SelectTrigger>
            <SelectContent>
              {classes.map((classItem: ClassItem, index: number) => (
                <SelectItem key={index} value={classItem.name}>
                  {classItem.name}
                </SelectItem>
              ))}
            </SelectContent>
          </Select>
        </div>
        <Button className="w-full">Generate Quiz</Button>
      </CardContent>
    </Card>
  );
}
